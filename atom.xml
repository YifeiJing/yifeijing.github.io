<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yifeijing.github.io</id>
    <title>Moriturus Te Saluto</title>
    <updated>2022-12-15T08:56:24.291Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yifeijing.github.io"/>
    <link rel="self" href="https://yifeijing.github.io/atom.xml"/>
    <subtitle>Yifei&apos;s personal blog!</subtitle>
    <logo>https://yifeijing.github.io/images/avatar.png</logo>
    <icon>https://yifeijing.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Moriturus Te Saluto</rights>
    <entry>
        <title type="html"><![CDATA[写在2022年11月]]></title>
        <id>https://yifeijing.github.io/post/xie-zai-2022-nian-11-yue/</id>
        <link href="https://yifeijing.github.io/post/xie-zai-2022-nian-11-yue/">
        </link>
        <updated>2022-11-05T06:13:58.000Z</updated>
        <content type="html"><![CDATA[<p>学校停电在家无事可做，回顾一下即将过去的一年吧。毕竟12月预计挺忙的。</p>
<p>这一年，放弃继续读博深造，决定了在日本就职并找到了一份互联网工作。<br>
这一年，开始了一项新爱好：二轮。从四月最初的Honda CBR250R到10月的大型二轮YAMAHA MT-09SP。由最初只是想试试新事物到逐渐着迷，深入研究引擎和机械结构，对器械工业有了一定理解。除此之外，试骑了KAWASAKI NINJA H2，HONDA CBR1000RR-R FIREBLADE这两辆顶级跑车。<br>
这一年，实现了经济独立，虽然还是学生，但通过便利店，学校，公司的打工获得了足够支撑个人生活开销，学杂费开销的收入。虽然一周工作超过30小时还要兼顾研究是很累的事，但感觉空下来就会胡思乱想，起码能充实的度过每一天也不差。<br>
这一年，认真的锻炼身体，虽然感觉体质还是和原来一样，不过肉眼可见的练出了形状，洗澡的时候总被大叔盯着看。。。（那句话咋说来着）<br>
这一年，终于贯通了从后端到前端的整个WEB开发流程。从零写了http服务器和几个基于React的UI。接触了Node.js。<br>
这一年，写出了基于OpenGL和Dear imgui的3D渲染系统。终于参透了OpenGL的流水线模型的设计思想。<br>
这一年，读完了APUE，没什么大的收获，开始肯Unix Socket。<br>
这一年，开始了对于DBMS的研究，在团队的帮助下接触了Oracle。开始了CMU的Bustub，希望从它的开发中加深理解。<br>
这一年，依然是孤身一人。和去年不同的是，没有交到新朋友，因为几乎所有的时间都在工作和研究。因为价值观和做事原则的问题和几个朋友决裂。从不解到愤怒到绝望到接受，用了将近半年时间。没有得到身边任何人的帮助，还是走过来了。我常常想假如最初显得合群一点，亲和一点，会不会也会有很多每天可以出去happy的朋友，也会找到可以交心的伴侣？</p>
<p>这一年下来是好是坏呢？也许还是在原地踏步。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MT-09SP 2022 纳车！]]></title>
        <id>https://yifeijing.github.io/post/mt-09sp-2022-na-che/</id>
        <link href="https://yifeijing.github.io/post/mt-09sp-2022-na-che/">
        </link>
        <updated>2022-10-08T09:38:12.000Z</updated>
        <content type="html"><![CDATA[<p>从预定到纳车没想到就等了一个月。<br>
这次是全新的888cc YAMAHA MT-09sp！直列三缸引擎CP3，搭载九轴陀螺仪，TCS，Quickshifter和巡航系统。大概是目前性价比最高的大型二轮了。哦哦哦哦哦哦哦哦哦！<br>
新车要慣らし運転1000km。这1000km不能跑超5000rpm，以及要用输出最低的Mode 4。简单的讲就是磨合期。不仅是引擎，轮胎和刹车也要磨合。因为新胎比较硬，所以更容易打滑。。。刹车片也是新的，非常滑，刚开始刹车就非常不好用。不过因为本身就全都是新的，刚开始走行就会闻到各种焦味，耐热胶啊，排气管啊，引擎上的部件之类的。接下来的一个月要各处旅行了！<img src="https://yifeijing.github.io/post-images/1671094298388.JPG" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to integrate imgui to OpenGL application rendering pipeline]]></title>
        <id>https://yifeijing.github.io/post/how-to-integrate-imgui-to-opengl-application-rendering-pipeline/</id>
        <link href="https://yifeijing.github.io/post/how-to-integrate-imgui-to-opengl-application-rendering-pipeline/">
        </link>
        <updated>2022-06-16T10:34:18.000Z</updated>
        <content type="html"><![CDATA[<p>The idea of <em>Dear imgui</em> :</p>
<blockquote>
<p>It outputs optimized vertex buffers that you can render anytime in your 3D-pipeline enabled application</p>
</blockquote>
<p>Which has meaned that adding these optmized vertex buffers at any time in the rendering pipeline is possible.</p>
<p>Also the CMakeFileLists of standalone imgui library is used to integrate this UI to any program!</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第一辆车决定是你了CBR250R]]></title>
        <id>https://yifeijing.github.io/post/di-yi-liang-che-jue-ding-shi-ni-liao-cbr250r/</id>
        <link href="https://yifeijing.github.io/post/di-yi-liang-che-jue-ding-shi-ni-liao-cbr250r/">
        </link>
        <updated>2022-04-11T10:27:29.000Z</updated>
        <content type="html"><![CDATA[<p>看了三周，Goobike，twitter和福冈本地的车店。最后还是决定Goobike了。250cc的中古车价格都挺离谱的，明明都已经骑了很久的车，依然能卖到全新的80%左右。姑且挑了一辆最便宜的CBR250R 2011黑色款。车子22万，不过加了服务费和运费（要从神户运过来）就是30万了。运费4万多真是离谱，而且还是要等一个月（5/13）才能送过来，没想到货运这么缺人，没想到货运这么赚钱。不过买下了，真的期待。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[拿到二轮驾照了！]]></title>
        <id>https://yifeijing.github.io/post/na-dao-er-lun-jia-zhao-liao/</id>
        <link href="https://yifeijing.github.io/post/na-dao-er-lun-jia-zhao-liao/">
        </link>
        <updated>2022-03-07T07:18:49.000Z</updated>
        <content type="html"><![CDATA[<p>历时三个月，从零接触到拿照，还是一段不短的时间。不过主要原因是约不到课：一节50分钟，一周还就能约两节。。。<br>
能在修二开始前拿到二轮驾照真是太好了！可惜没有车。没有钱啊，要不要买一辆呢？原本打算租车来着，但是没有经验，租来骑出事了就麻烦了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[A way to connect XOS to Windows samba server]]></title>
        <id>https://yifeijing.github.io/post/a-way-to-connect-xos-to-windows-samba-server/</id>
        <link href="https://yifeijing.github.io/post/a-way-to-connect-xos-to-windows-samba-server/">
        </link>
        <updated>2022-01-04T03:19:20.000Z</updated>
        <content type="html"><![CDATA[<p>I have been using the file sharing system for one year, but using the Windows machine provided by school. It is not a good choice to use this PC to work then browse files on Windows and find some ways to transport files from that machine to my Mac. Thus, I spent some time on connecting the two different file systems.<br>
Actually, it it the original idea that the network was designed to share files between different systems. It is just the complicacy of this system that made connections difficult. There is really a solution provided by <em>Finder</em> on Mac. Using the <strong>Connect to server</strong> option in the <strong>Go</strong> panel, then input the server name and share name in the form of &quot;smb://server_name/share_name&quot;. The connection is ready if the above information is correct.<br>
ref: http://kb.mit.edu/confluence/pages/viewpage.action?pageId=3908137</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Abashi]]></title>
        <id>https://yifeijing.github.io/post/abashi/</id>
        <link href="https://yifeijing.github.io/post/abashi/">
        </link>
        <updated>2021-12-11T06:03:57.000Z</updated>
        <content type="html"><![CDATA[<p>这次去了名叫Abashi的印度餐厅。<br>
主菜是馕和咖喱，单从菜单看就发现其实只有咖喱和馕，加上烤鸡腿。<br>
<img src="https://yifeijing.github.io/post-images/1639631423084.jpg" alt="" loading="lazy"><br>
<img src="https://yifeijing.github.io/post-images/1639631435133.jpg" alt="" loading="lazy"></p>
<p>首先要选择一个套餐，这套餐搭配很简单，馕和咖喱，馕有多种可选，根据加的佐料，有芝士之类的。然而这价格对于我来说有点高，于是就点了普通的馕。咖喱的选择有一个专门的菜单。有各种佐料，第一次来，就选了比较大众的鸡肉咖喱。然后选辣度，从0到100可选。根据菜单的建议，到5就是一般辣咖喱的味道了，作为在家做过辣咖喱的人，我决定选择5。实际上完全不辣，或者说基本感觉不到辣。后来和前辈聊起，一般都选20。更有甚者选择100，毕竟那是极限辣度，就总有人选择挑战一把，我就算了。。。</p>
<p>回到菜单，选择一个套餐之后，就可以去乘免费的汤喝了。有鸡蛋汤和番茄汤可选。<br>
<img src="https://yifeijing.github.io/post-images/1639632052109.jpg" alt="" loading="lazy"><br>
因为鸡蛋汤太一般，于是只拍了番茄汤。味道真的不错。</p>
<p>然后是烤鸡腿，点了一个大蒜的，烤的还是可以的，但是蒜味其实不太浓，总体印象一般吧。<br>
<img src="https://yifeijing.github.io/post-images/1639632334570.jpg" alt="" loading="lazy"><br>
重点还是馕和咖喱。<br>
<img src="https://yifeijing.github.io/post-images/1639632360952.jpg" alt="" loading="lazy"><br>
好大一片馕，然后撕下来一片，沾上右边的咖喱，就是所有的吃法。真的太好吃了。就和家里的馒头蘸酱一样。然而咖喱是热的，馕也是刚烤出来的，实在是太棒了。</p>
<p>以后还会再来，考虑到是饭店，所以一顿990吃下来其实价格可以接受。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[My LaTeX configurations]]></title>
        <id>https://yifeijing.github.io/post/my-latex-configurations/</id>
        <link href="https://yifeijing.github.io/post/my-latex-configurations/">
        </link>
        <updated>2021-12-06T03:51:26.000Z</updated>
        <content type="html"><![CDATA[<p>Having used LaTeX for such a long time makes me feel it is necessary to summarise for me configuration for later uses and recommendations.</p>
<h2 id="packages">Packages</h2>
<p>Like any projects and languages, the most important thing is to use appropriate packages. I will introduce my own set of packages frequently used in writing essays and reports.</p>
<h3 id="geometry">Geometry</h3>
<p>If you have been using the default page layout for some time, you must have noticed that there are too many white space at the margin. The <strong>Geometry</strong> package lets you change the page layout. Actually, it can change the length and layout of paper size, margins, footnote, header, orientation by simple configuratiions when including the package.</p>
<p>For my case, I would like to customize the space of top, bottom, left, right.</p>
<pre><code class="language-LaTeX">\usepackage[top=3cm, bottom=3.2cm, left=4cm, right=3cm]{geometry}
</code></pre>
<h3 id="hyperref">Hyperref</h3>
<p>Because the main purpose of using LaTeX for me is to generate pdf files, which have excellent navigating tools, <strong>hyperref</strong> provides all enough for cross-reference elements in the pdf.<br>
When it is needed to cross-ref something, using the command:</p>
<pre><code class="language-LaTeX">\hyperref[]{}
</code></pre>
<p>The compiler will handle all of the rest.</p>
<p>My configuration: (A sample of my dissertation)</p>
<pre><code class="language-LaTeX">\hypersetup{
    pdftoolbar=true,        % show Acrobat’s toolbar?
    pdfmenubar=true,        % show Acrobat’s menu?
    pdffitwindow=false,     % window fit to page when opened
    pdfstartview={FitH},    % fits the width of the page to the window
    pdftitle={Modelling the Impact of Wind and EVs to the Power Grid in Orkney},    % title
    pdfauthor={Yifei Jing},     % author
    pdfsubject={Dissertation},   % subject of the document
    pdfcreator={Yifei Jing},   % creator of the document
    pdfproducer={Yifei Jing},
    pdfkeywords={Data Science} {Power grid} {Electrical vehicles} {Simulation},
    colorlinks,
    linkcolor=violet,
    citecolor=blue,
    urlcolor=brown
}
</code></pre>
<h3 id="graphicx">Graphicx</h3>
<p>There is always the need to include figures, and this package handles the functions of importing figures into document. The command is simple: <code>\includegraphics[]{}</code> though, it is always combined with the <em>figure</em> environment.</p>
<pre><code class="language-LaTeX">\begin{figure}[ht]
            \centerline{\includegraphics[scale=1]{cummulativewindcapacity}}
            \caption{The cumulative wind power generation capacity between 2000 and 2019}
            \label{fig_cummulative_wind_capacity}
\end{figure}
</code></pre>
<p>This figure can be automatically numbered by LaTeX compiler, and referenced.</p>
<p>What needs to be concerned is the positioning configurations to the right part of the figure command.</p>
<table>
<thead>
<tr>
<th>Specifiers</th>
<th>Permission</th>
</tr>
</thead>
<tbody>
<tr>
<td>h</td>
<td>Place the float <em>here</em>. Approximately at the same point it occurs in the source text.</td>
</tr>
<tr>
<td>t</td>
<td>Position at the <em>top</em> of the page.</td>
</tr>
<tr>
<td>b</td>
<td>Position at <em>bottom</em> of the page.</td>
</tr>
<tr>
<td>p</td>
<td>Put on a special <em>page</em> for floats only.</td>
</tr>
<tr>
<td>!</td>
<td>Override internal parameters LaTeX uses for determining &quot;good&quot; float positions.</td>
</tr>
</tbody>
</table>
<p>However, the real usage is always combining 'htp' together, while they have conflicting meanings. It is also needed to be notified that the <em>figure</em> environment makes the float element, such that LaTeX will not break it into parts, and it will always select the best place to put it to some where. Therefore, <a href="https://tex.stackexchange.com/questions/8625/force-figure-placement-in-text">it is wise to directed include the picture into the document if the position of the figure is so important that it cannot be decided by LaTeX</a>.</p>
<pre><code class="language-LaTeX">\usepackage{caption}
...
\noindent%
\begin{minipage}{\linewidth}% to keep image and caption on one page
\makebox[\linewidth]{%        to center the image
  \includegraphics[keepaspectratio=true,scale=0.6]{slike/visina8}}
\captionof{figure}{...}\label{visina8}%      only if needed  
\end{minipage}
</code></pre>
<p>or</p>
<pre><code class="language-LaTeX">\begin{center}
  \includegraphics[...]{slike/visina8}}
\captionof{figure}{...}\label{visina8}%      only if needed  
\end{center}
</code></pre>
<h3 id="cite">Cite</h3>
<h3 id="multicolmultirow">Multicol/Multirow</h3>
<h3 id="tabulary">Tabulary</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[The retrogradation of profile photo]]></title>
        <id>https://yifeijing.github.io/post/the-retrogradation-of-profile-photo/</id>
        <link href="https://yifeijing.github.io/post/the-retrogradation-of-profile-photo/">
        </link>
        <updated>2021-12-03T12:31:54.000Z</updated>
        <content type="html"><![CDATA[<p>Maybe you have found that my wechat profile photo has been changed to a picture full of ASCII characters but still the outline of people's face can be somehow figured out. Today, it changed to a new pattern, where the source code of the converter has been used as the fulfilling text.</p>
<h2 id="the-mechanism">The mechanism</h2>
<p>This program uses the image utilities of opencv, which decodes the input image file in to an array in the memory, so that the developer can manipulate based on the information of the picture. What has been useful is the automatic grayscale convert mode specified by method <em>imread</em>, such that the convert from color image to a grayscaled image is just one step along with the image file decoding. Then, the magic is to specify the intervals of intensities and arrange a symbol for each interval, respectively. Because it is an ASCII art, output the symbols directly based one the interval is enough.</p>
<h2 id="the-result">The result</h2>
<p>At first, the symbols are specified by some marks like '_', '-', '.', '#', '`', '^', and each symbol actually indicates one interval of intensity. Using my original profile photo Alan:<br>
<img src="https://yifeijing.github.io/post-images/1638528498677.jpeg" alt="original profile photo" loading="lazy"><br>
And the result is shown:<br>
<img src="https://yifeijing.github.io/post-images/1638528533988.png" alt="symbol result" loading="lazy"><br>
The outline is clear from the difference of marks.<br>
Today, I used the source code itself to fulfill the picture to make it somehow special. It now looks like this:<br>
<img src="https://yifeijing.github.io/post-images/1638528642844.png" alt="" loading="lazy"></p>
<h2 id="possible-improvement">Possible improvement</h2>
<p>Highlight the language grammar. This is not hard to image, but the implementation is difficult, because both the language server and the highlight method are not easy to implement.</p>
<h2 id="20211217">2021.12.17</h2>
<p>This task is now done by using regex to analyse the code and color the outputs using ANSI escape controls. I truely made it!<br>
<img src="https://yifeijing.github.io/post-images/1639738882370.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Yamani]]></title>
        <id>https://yifeijing.github.io/post/yamani/</id>
        <link href="https://yifeijing.github.io/post/yamani/">
        </link>
        <updated>2021-12-02T14:23:26.000Z</updated>
        <content type="html"><![CDATA[<p>今天来到了位于学研堂吉柯德旁边的Yamani。这是一家居酒屋。最早并不知道这是一家居酒屋，只是从Google地图上的照片看到这家店有大块炸鸡和烤牛排，遂决定来这里尝尝。<br>
先上菜单：<br>
<img src="https://yifeijing.github.io/post-images/1638878391011.jpg" alt="menu 1" loading="lazy"><br>
<img src="https://yifeijing.github.io/post-images/1638878407526.jpg" alt="menu 2" loading="lazy"><br>
因为是自营式的居酒屋，所以别具一格的手写菜单让人眼前一亮。这手写体在日本也是算上书法了，所以读起来很舒服。只是问题是对于外国人而言，更希望文字与图片组合起来，这样印象更加直观，也不需要花时间一点一点读那些说明了。话说回来，因为图片给人的信息更多，所以大家都习惯看图了，便读不下来稍长的文字，难以想象文字描述的画面了。这到底是好事还是坏事呢？<br>
店不大，大概最多容纳二十人的样子，可是菜单的名目还是很多的。有橙色线的都是推荐菜品。我点了首页推荐的「名物ほんみ」和「塩煮込み」这两样。第一个是个炸鸡，炸半只鸡，上来很大一块。<br>
如图：<br>
<img src="https://yifeijing.github.io/post-images/1638878431644.jpg" alt="fried chicken" loading="lazy"><br>
这是服务员帮忙剪开过的样子，本来是一整个。第一眼看就很想吃。实际吃起来的话，实际上更喜欢小块炸鸡。因为一下炸一大块的话，不同部位的鸡肉无法凸显自己的优势。值得一提的是，炸鸡胸肉确实不太好吃，太柴了。所以，单炸一个鸡腿还是比较推荐的。<br>
接下来是煮物，只是一个用盐煮的和牛肉以及各种食材。<br>
<img src="https://yifeijing.github.io/post-images/1638878459595.jpg" alt="soup" loading="lazy"><br>
从照片也能感觉到，里面的品类很丰富；豆腐、山药、萝卜。。。吃起来也很有味道，属于进店必尝了。只是因为是盐煮，所以汤会很咸。<br>
接下来是牛排，这是来这里之前非常吸引我的一道菜，朋友点了一道，所以拍了一张。<br>
<img src="https://yifeijing.github.io/post-images/1638878472315.jpg" alt="beef steak" loading="lazy"><br>
可以说烤的很有水平了，因为烤出了三层颜色。这样就可以尝到由外而内有层次的味道。此外还配有芥末，柠檬和烧烤酱，所以可以体会不同的细节。<br>
然而，这是家居酒屋，所以其实是来喝酒的。光是酒就单独列了另外一个菜单。有自己制作的特色梅子酒和果酒，很值得一尝。朋友尝了之后感觉是来这里吃的最好吃的东西。。。可惜我开车，所以不能喝酒，下次就骑车来了。<br>
总结来说，很值得一尝的一家店。特色鲜明。因为是居酒屋，适合和几个朋友一起来边聊边吃。追求饱腹的话，其实不大推荐，因为没有主食，只是吃菜的话消费是很高的。平均一人3000円。</p>
]]></content>
    </entry>
</feed>